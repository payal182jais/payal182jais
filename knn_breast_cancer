#Using KNN

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import preprocessing
from sklearn.preprocessing import Normalizer
from sklearn.model_selection import train_test_split
from sklearn.model_selection import GridSearchCV
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

data = pd.read_csv('Breast_cancer.csv')

print(“Checking missing values\n”)
print(data.isnull().sum())

df = pd.DataFrame(data)
print(“\n”)

print(“Shape of data\n”,df.shape)

print(“\n”)
print(“Counts in each class\n”)
count = df[‘diagnosis’].value_counts()
print(count)

plt.rcParams[“figure.figsize”] = [9,6]
sns.countplot(x=’diagnosis’,hue=”diagnosis”, data=df)
plt.show()

X = df.iloc[:,2:32]
y = df.iloc[:,1]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

print(“\n”)
print(“Training data set\n”,X_train,”\n”,y_train)
print(“\n”)
print(“Testing data set\n”,X_test)

#buildingmodel
knn = KNeighborsClassifier()
#create a dictionary of all values we want to test for n_neighbors
params_knn = {‘n_neighbors’: np.arange(1, 25)}
#use gridsearch to test all values for n_neighbors
knn_gs = GridSearchCV(knn, params_knn, cv=5)
#fit model to training data
knn_gs.fit(X_train, y_train)
knn_best = knn_gs.best_estimator_
y_pred = knn_best.predict(X_test)

print(“Confusion Matrix\n”,confusion_matrix(y_test,y_pred))
print(“\n”)
print(“Classification Report\n”,classification_report(y_test,y_pred))
print(“\n”)
print(“Accuracy : “,accuracy_score(y_test,y_pred)*100)



In this phase of experiment, it has approx 96.67 test accuracy and a approx 97.13 CV accuracy.

Model	CV Accuracy	Test Accuracy	F1-Score
Linear SVM	                  96.72193877551021%	                96.19047619047619%	                0.96
Linear Regression	            83.04080172481487%	                83.15260747045592%	                0.97
Logistic Regression	          96.72193877551021%	                96.66666666666667%	                0.97
KNN                           96.49122807017544%                  96.49122807017544%                   0.96

The results have shown that even with 0 values as missing values, the KNN had the highest CV accuracy and test accuracy.
